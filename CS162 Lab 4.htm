<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html><head></head><body>

















<div class="WordSection1">

<h2 align="center" style="text-align:center;">CS162 Lab 4</h2>

<p class="MsoListParagraphCxSpFirst" style="margin-left:.75in;text-indent:-.25in;"><span><span>1.<span style="font:7.0pt &quot;Times New Roman&quot;;">&#160;&#160;&#160;&#160;&#160;&#160;
</span></span></span><span>Given
the following declaration:</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span class="SpellE"><span style="font-family:&quot;Courier New&quot;;">const</span></span><span style="font-family:&quot;Courier New&quot;;"> <span class="SpellE">int</span> MAX_CHAR =
100;</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span class="SpellE"><span class="GramE"><span style="font-family:&quot;Courier New&quot;;">struct</span></span></span><span style="font-family:&quot;Courier New&quot;;"> Student</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span style="font-family:&quot;Courier New&quot;;">{</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span style="font-family:&quot;Courier New&quot;;"><span>&#160;&#160; </span><span class="GramE">char</span> id[MAX_CHAR];</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span style="font-family:&quot;Courier New&quot;;"><span>&#160;&#160; </span><span class="GramE">float</span> <span class="SpellE">gpa</span>;</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span style="font-family:&quot;Courier New&quot;;">};</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span class="SpellE"><span class="GramE"><span style="font-family:&quot;Courier New&quot;;">const</span></span></span><span style="font-family:&quot;Courier New&quot;;"> <span class="SpellE">int</span> MAX_CAP = 10;</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span class="GramE"><span style="font-family:&quot;Courier New&quot;;">class</span></span><span style="font-family:&quot;Courier New&quot;;"> <span class="SpellE">StudentList</span></span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span style="font-family:&quot;Courier New&quot;;">{</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span class="GramE"><span style="font-family:&quot;Courier New&quot;;">public</span></span><span style="font-family:&quot;Courier New&quot;;">:</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span style="font-family:&quot;Courier New&quot;;"><span>&#160;&#160; </span><span class="SpellE"><span class="GramE">int</span></span> search(<span class="SpellE">const</span>
char id[], Student&amp; match) <span class="SpellE">const</span>;</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span style="font-family:&quot;Courier New&quot;;"><span>&#160;&#160; </span><span class="SpellE"><span class="GramE">bool</span></span> get(<span class="SpellE">int</span>
index, Student&amp; <span class="SpellE">aStudent</span>) <span class="SpellE">const</span>;</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span style="font-family:&quot;Courier New&quot;;"><span>&#160;&#160; </span><span class="SpellE"><span class="GramE">bool</span></span> remove(<span class="SpellE">const</span>
char id[], Student&amp; <span class="SpellE">aStudent</span>);</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span style="font-family:&quot;Courier New&quot;;"><span>&#160;&#160;
</span>…</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span style="font-family:&quot;Courier New&quot;;"><span>&#160;&#160; </span></span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span class="GramE"><span style="font-family:&quot;Courier New&quot;;">private</span></span><span style="font-family:&quot;Courier New&quot;;">:</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span style="font-family:&quot;Courier New&quot;;"><span>&#160;&#160; </span>Student<span>&#160;&#160;&#160; </span><span class="GramE">list[</span>MAX_CAP];</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span style="font-family:&quot;Courier New&quot;;"><span>&#160;&#160; </span><span class="SpellE"><span class="GramE">int</span></span><span>&#160;&#160;&#160;&#160;&#160;&#160;&#160; </span>size;</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span style="font-family:&quot;Courier New&quot;;">};</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span>Implement the following
functions:</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span class="SpellE"><span class="GramE"><span style="font-family:&quot;Courier New&quot;;">int</span></span></span><span style="font-family:&quot;Courier New&quot;;"> <span class="SpellE">StudentList</span>::search(<span class="SpellE">const</span> char id[], Student&amp; match) <span class="SpellE">const</span>;</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span>The above function initializes
search in the list for a student with “id.” If the search is successful, the
function returns the index of that matching student and passes back the
matching student through “match.” If the search failed, it returns -1 and
“match” won’t be set.</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span>&#160;</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span class="SpellE"><span class="GramE"><span style="font-family:&quot;Courier New&quot;;">bool</span></span></span><span style="font-family:&quot;Courier New&quot;;"> <span class="SpellE">StudentList</span>::get(<span class="SpellE">int</span> index, Student&amp; <span class="SpellE">aStudent</span>)
<span class="SpellE">const</span>;</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span>The above function copies
a student object at position “index” to “<span class="SpellE">aStudent</span>”
and returns true if the operation is successful. It returns false if “index” is
out of boundary and “<span class="SpellE">aStudent</span>” won’t be set, e.g. (-2
or some value greater than the size of the list)</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span>&#160;</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span class="SpellE"><span class="GramE"><span style="font-family:&quot;Courier New&quot;;">bool</span></span></span><span style="font-family:&quot;Courier New&quot;;"> <span class="SpellE">StudentList</span>::remove(<span class="SpellE">const</span> char id[], Student&amp; <span class="SpellE">aStudent</span>);</span><span></span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span>The above function removes
a student object with “id” from the list and copies the deleted student into “<span class="SpellE">aStudent</span>.” It returns true if the operation is successful
and false if no matching id could be found.</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span>&#160;</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;text-indent:-.25in;"><span><span>2.<span style="font:7.0pt &quot;Times New Roman&quot;;">&#160;&#160;&#160;&#160;&#160;&#160;
</span></span></span><span>Write
driver program and design test cases to test the functions.</span></p>

<p class="MsoListParagraphCxSpMiddle" style="margin-left:.75in;"><span>&#160;</span></p>

<p class="MsoListParagraphCxSpLast" style="margin-left:.75in;text-indent:-.25in;"><span><span>3.<span style="font:7.0pt &quot;Times New Roman&quot;;">&#160;&#160;&#160;&#160;&#160;&#160;
</span></span></span><span>Copy/paste
the functions you implement in step 1 into a plain text file, lab4.txt (you can
use notepad for this) and upload it into lab 4 <span class="SpellE">dropbox</span>.
For submission please only copy/paste the required function(s), but it’s your
responsibility to write driver code and test it thoroughly before uploading the
text file.</span></p>

</div>




<script type="text/javascript">D2LMathML.DesktopInit('https://s.brightspace.com/lib/mathjax/2.5.3/MathJax.js?config=MML_HTMLorMML','https://s.brightspace.com/lib/mathjax/2.5.3/MathJax.js?config=TeX-AMS-MML_HTMLorMML');</script></body></html>